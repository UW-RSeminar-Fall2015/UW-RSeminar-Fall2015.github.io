{"name":"UW Biology R Seminar - Fall 2015","tagline":"Where to go for the syllabus, schedule, and contact info","body":"### Welcome to R-Seminar\r\nThis weekly \"self-help\" course will allow us to share knowledge about scientific computing using the R language.\r\n\r\n### How the seminar typically works\r\nEach week one person presents on a topic (typically something they have some experience with) usually by first giving a short presentation on that topic and then walking the participants through an example script. Topics are whatever people are interested in learning and are usually picked during the first seminar of the quarter. In the past, we've covered things like generalized linear models, mixed effects models, multiple comparison tests, quantile regression, bootstrapping, GIS, making pretty figures, and others. We've also done \"data workshops\", where someone will bring in their dataset and the group will brainstorm ways of analyzing and presenting it. Folks who at least have a basic knowledge of R going in (can read data into R, make some kind of graph, do a simple statistical test like a t-test) will probably get the most out of the seminar, but I will do a brief R crash-course at the beginning of the seminar if there is interest.\r\n\r\n### Accessing seminar materials\r\nWe will host all of the seminar materials on the seminar's [GitHub Organization Page](https://github.com/UW-RSeminar-Fall2015/)\r\n\r\n### Weekly Schedule\r\nAll meetings will be held in Hitchcock 312 from 3:30 - 4:20pm.\r\n\r\nDate  \t| Leader\t |  Topic\r\n------- | ----- \t | -------------\r\n10 / 6  | Ian \t\t | Seminar Organization\r\n10 / 13\t| Ian \t\t | Code Management / GitHub\r\n10 / 20\t| Dave / Jennifer| Data Manipulation\r\n10 / 27\t| Rory / Sima    | Wrangling Big Datasets\r\n11 / 3 \t|  CJ / Ethan    | Plotting and Mapping in ggplot2\r\n11 / 10\t| Max / Morgan   | Beyond Linear Models\r\n11 / 17\t| Ian \t\t | Dynamic reports and slides with Rmarkdown\r\n11 / 24\t| tba            | Data Workshop\r\n12 / 1 \t| Ian \t\t | Interactive Documents (Shiny)\r\n12 / 8 \t| Josh \t\t | Package Developement\r\n\r\n### Guidelines for Presenters:\r\n1. **Focus on the Science**—We are scientists, not programmers.\r\n\r\n2. **Move Slow**—You know your code, data and approach better than your audience.\r\n\r\n3. **Make it Interactive**—Include a simple exercise to give people a chance to play with the code.\r\n\r\n4. **Upload materials at least 24hr in advance**—Allows folks to install packages, work out any platform-specific kinks.\r\n\r\n### Instructions for Presenters:\r\n\r\n1. Sign into the GitHub website and create a new repository to hold the files you want to share. Name it using the convention \"WeekX_topic\". For example if you are presenting about regression on week 3, the name would be \"Week3_regression\". Optionally add a description, .gitignore, README, and license. Click \"Create repository\".\r\n\r\n2. In RStudio, go to File > New Project... Select Version Control > Git\r\n\r\n3. Clone the repository to your local machine. The repository URL should be https://github.com/*username*/*repository_name*.git. Choose a directory name and indicate where on your local machine you want the files to live, for example ~/Ian/code/.\r\n\r\n4. Click \"Create Project\". This will create a directory and that will sync to the remote repository. It will also download the files (README,.gitignore,LICENSE) that you created on GitHub to this directory, and create a new Rstudio Project file.\r\n\r\n5. Get Coding! To start a new script, go to File > New File > R Script, and save it to the repository directory. Write some code and run it to make sure it works.\r\n\r\n6. When you get done with a chunk of significant work, Save the script and select the \"Git\" tab from the upper-right panel in RStudio. Click \"Commit\".\r\n\r\n7. Click the blue down arrow to pull changes from the remote server, then hit the check marks next to the files you want to sync to the remote repo. Add a message describing what you just did and click the \"Commit\" button.\r\n\r\n8. If everything has gone smooth, you are ready to push changes to the remote server. Do that by clicking the \"Push\" button. Now you are ready to do another chunk of work. Save, Pull, Commit, Push, Repeat.\r\n\r\n9. When you are done with the code, email me (ibreckhe@gmail.com) and I will fork the repository to the R Seminar Organization so it will be easy for the rest of the group to find.\r\n\r\n### Note on public vs. private repositories\r\nThe default for GitHub (and this seminar) is to have all of the files in a repository, including code and data, open for public examination. If that is not possible (for example you are using someone else's data), you can choose to keep a repository private when you create it. To do so without paying for a GitHub subscription, you will need to apply for an education discount (https://education.github.com/). After you get the discount, you can select the \"Private\"  option when you create a new repository. This repository will not be visible to anyone except you by default. In order to share it with the rest of the seminar, you will need to give me access to this repository so I can create a \"fork\" of it  that will be visible to the rest of the seminar participants, but not the general public. To do this, go to the repository's website, and click the \"Settings\" link on the right-hand side of the page, and then select the \"Collaborators\" tab. Add my GitHub username (@ibreckhe) to the collaborators list.\r\n\r\n### Support or Contact\r\nThe primary organizer of this seminar is Ian Breckheimer (ibreckhe@uw.edu, @ibreckhe), but individual seminar participants are responsible for the content they upload.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}